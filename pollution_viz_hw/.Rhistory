library(GenomicFeatures)
GenomicFeatures
?GenomicFeatures
??GenomicFeatures
search()
search("GenomicFeatures")
search(GenomicFeatures)
search()
??GenomicFeatures
help(package = GenomicFeatures)
install.packages("devtools")
find_rtools()
find(devtools)
find("devtools")
find("R6")
install.packages("KernSmooth")
library(KernSmooth)
find.package("devtools")
find.package("devtoad")
library(devtools)
find_rtools()
q()
q()
?lapply
X <- 1:10
Y <- lapply(X,function(x){x^2})
Y
Y
class(Y[[1]])
class(Y)
Y <- lapply(X,function(x){x^2},simplify=TRUE)
Y <- lapply(X,function(x){x^2},simplify="vector")
Y <- vapply(X,function(x){x^2})
Y <- vapply(X,function(x){x^2},FUN.VALUE="numeric")
Y <- vapply(X,function(x){x^2},FUN.VALUE="vector")
Y <- vapply(X,function(x){x^2})
Y <- sapply(X,function(x){x^2})
Y
class(Y)
vapply(X = X, FUN = function(x){x^2}, FUN.VALUE = vector(mode = "numeric, length = 10"))
X
class(X)
vapply(X = X, FUN = function(x){x^2}, FUN.VALUE = vector(mode = "numeric", length = 10"))
)
<- y
getwd()
table <- read.table("../Downloads/034314-1.xlsx")
table <- read.table("../Downloads/034314-1")
table <- read.table("../Downloads/034314-1.xlsx")
?readWorksheetFromFile
?library
install.packages("XLConnect")
load(XLConnect)
load("XLConnect")
library(XLConnect)
my_table <- readWorksheetFromFile("../Downloads/034314-1.xlsx")
?readWorksheetFromFile
my_table <- readWorksheetFromFile("../Downloads/034314-1.xlsx")
getwd()
20:4
1:20:2
1:20:5
1:20[1:5]
?`:`
seq(1,19)
seq(1,19,2)
seq(1,19,length= 4)
seq(19,11,length= 4)
seq(19,1,length= 4)
seq(19L,11L,length= 4)
class(1:154)
6:pi
5:1.3
f1 <- gl(2,3)
f2 <- gl(3,2)
f1
f2
f1:f2
?seq
x <- vector(mode="numeric",length=4)
is.vector(x)
y <- 1:5
is.vector(y)
names(y)
names(y) <- c("a","b","c","d","e")
y
class(y)
is.vector(y)
x <- integer(length = 4)
x
x <- integer(c(1,2,3))
x <- integer(1,2,3)
x <- integer(1:3)
x <- c(1:3, 8:9)
x
x <- numeric(length = 5)
x <- c(seq(1.0,4.5,by=.5),seq(4.0,1.0,length=7),seq(111,999,along.with = 1:10))
x
x <- c(seq(1.0,4.5,by=.5),seq(4.0,1.0,length=7),seq(111,999,along.with = 1:9))
x
x <- c(seq(1.0,4.5,by=.5),seq(4.0,1.0,length=7),seq(111,999,along = 1:9))
x
seq_len(length.out = 10)
seq_along(along.with = x,)
seq_along(along.with = x)
seq(from=4)
?`::`
stats::rnorm(5)
rnorm(5)
rnorm <- c(1,2,2)
rnorm
stats::rnorm
get(swirl)
get("swirl")
utils::as.person
?Vectorize
x
attributes(x)
dim(x)
class(x)
str(x)
names(x) <- rep(x = c("a","b","c"),8)
names(x)
names(x) <- replicate(n = 8, ("x", "y", "z"))
names(x) <- replicate(n = 8, expr = ("x", "y", "z"))
names(x) <- replicate(n = 8, expr = c("x", "y", "z"))
x
str(x)
attributes(x)
dim(x)
dimnames(x)
help(dim)
dim(x) <- c(3,8)
x
dim(x) <- c(1,24)
x
x <- vectorize(x)
x <- Vectorize(x)
x
class(x)
x <- as.vector(x)
x
class(x)
dim(x) <- c(3,8)
x
dimnames(x = "a")
dimnames(x) <- c("rows","columns")
?dimnames
provideDimnames(x=x,base = list(LETTERS))
dim(x)
dimnames(x) <- list(c("horizontal","vertical"))
dimnames(x) <- list("horizontal","vertical")
z <- list("lala", "baba")
z
class(dimnames)
str(dimnames)
x
provideDimnames(x=x base = list(LETTERS))
provideDimnames(x=x, base = list(LETTERS))
dim(x)
dimnames(x)
dimnames(x)[[1]]
dimnames(x)[[2]]
names(x)
rowSums(x)
attributes(x)
names(x)
names(x) <- list("a")
x
rownames(x)
colnames(x)
rownames(x) <- c("first","second","third")
x
dimnames(x)
attributes(x)
names(x) <- NULL
attributes(x)
colnames(x) <- c(LETTERS)
colnames(x) <- list(LETTERS)
colnames(y) <- LETTERS[0:8]
colnames(y) <- head(LETTERS,8)
rownames(x)
colnames(x)
colnames(x=x,prefix = "meow")
colnames(x)
colnames(x) <- c(letters)
rownames(x) <- c(LETTERS)
colnames(x) <- 1:8
colnames(x)
x
?subset
subset(x=LETTERS,subset=LETTERS<=LETTERS[8])
colnames(x) <- subset(x=LETTERS,subset=LETTERS<=LETTERS[8])
colnames(x)
y <- 1:10
dim(y)
dim(x) <- NULL
x
class(dimnames)
array(data=1:24,dim=3)
array(data=1:24,dim=c(2,3,4))
X <- array(data=1:24,dim=c(2,3,4))
dim(X)
dimnames(X)
dimnames(X) <- seq(1337,1337.4,length=9)
dimnames(X) <- list(seq(1337,1337.4,length=9))
dimnames(X) <- list(seq(1337,1337.4,length=9))
?dimnames
X <- provideDimnames(X, base = LETTERS)
X
LETTERS
X <- provideDimnames(X, base = seq(1337,1337.4,length=9))
X
X
dimnames(X) <- c("A","b","c","d","e","f","g","h","i")
dimnames(X) <- lis("A","b","c","d","e","f","g","h","i")
dimnames(X) <- list("A","b","c","d","e","f","g","h","i")
dimnames(X) <- list(x = c("A","b","c"), y = c("d","e","f"), z = c("g","h","i"))
colnames(X)
rownames(X)
names(X)
dimnames(
X
)
dimnames(X)[[1]]
dimnames(X)[[1]] <- c("row 1", "row 2")
dimnames(X)
class(dimnames(X))
dimnames(X) <- list(x = c("a","b"), y = c("c","d","e"), z = c("f","g","h","i"))
X
dim(X) <- c(6,4)
X
rownames(X) <- LETTERS
?rownames
nrow(X)
NROW(X)
provideDimnames(X)
str(provideDimnames)
help("provideDimnames")
letters[1:9]
letters[-(1:9)]
class(letters)
X <- 1:30
X[1:10]
X[5:25]
X
X[1:-10]
X[-10]
X[-10,-15]
X[c(-10,-15)]
letters[-(3:9)]
a <- letters
as.matrix(x = a, dim(2,13))
a
dim(a) <- c(2,13)
a
a[1:4]
a[-(8:15)]
a
a
library(swirl)
swirl()
swirl()
?swirl
install_from_swirl("Open Intro")
swirl()
y <- 100
cars$type
sqrt(y)
z <- sqrt(y)
?sqrt
cars
15
10
range(cars$price)
nxt()
sum(cars$price)
sum(cars$price)/54
mean(cars$price)
mpg.midsize
sort(mpg.midsize)
mpg.sorted <- sort(mpg.midsize)
20
30
10
19
median(mpg.midsize)
class(range(mpg.midsize))
(mpg.midsize)[[2]] - (mpg.midsize)[[1]]
(mpg.midsize)[[2]]
(mpg.midsize)[[1]]
summary(cars$mpgCity)
25
19
20
sd(mpg.midsize)
sd(mpg.midsize)^2
24
install_from_swirl("Data Analysis")
swirl()
swirl()
swirl()
ldf
print("meow")
exit()
q()
?print
?ggplot
install.packages(ggplot)
install.packages("ggplot")
install.packages("ggplot2")
?ggplot2
??ggplot2
setwd()
getwd()
setwd("Courser_R_Folder")
dir("Coursera_R_Folder")
dir("Coursera_R_Folder/wine_quality")
redWine <- read.csv("Coursera_R_Folder/wine_quality/winequality-red.csv")
redWine <- read.csv("Coursera_R_Folder/wine_quality/winequality-white.csv")
redWine <- read.csv("Coursera_R_Folder/wine_quality/winequality-read.csv")
redWine <- read.csv("Coursera_R_Folder/wine_quality/winequality-red.csv")
redWine <- read.table("Coursera_R_Folder/wine_quality/winequality-red.csv")
redWine <- read.csv("Coursera_R_Folder/wine_quality/winequality-red.csv")
head(redWine)
summary(redWine)
numcols(redWine)
ncol(redWine)
redWine <- read.csv("Coursera_R_Folder/wine_quality/winequality-red.csv",header = TRUE)
redWine <- read.csv("Coursera_R_Folder/wine_quality/winequality-red.csv",sep = ;)
redWine <- read.csv("Coursera_R_Folder/wine_quality/winequality-red.csv",sep = ";")
redWinePlot <- ggplot(redWine)
library(ggplot2)
redWinePlot <- ggplot(redWine)
str(redWinePlot)
quit()
scan(1)
scan(c("meow"))
library(plyr);
library(dplyr)
setwd("Coursera_R_Folder")
dir()
file.create("pollution_plot_hw")
setwd("pollution_plot_hw")
getwd()
dir()
setwd("pollution_plot_hw")
rm("pollution_plot_hw")
unlink("pollution_plot_hw")
dir.create("pollution_folder")
setwd("pollution_folder")
download.file(url = "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip",destfile="./pollution.zip")
unzip("pollution.zip")
dir()
library(ggplot2)
some_lines <- readLines("Source_Classification_Code.rds")
head(some_lines)
more_lines <- readLines("summarySCC_PM25.rds")
NEI <- readRDS("summarySCC_PM25.rds")
class(NEI)
Source_Code <- readRDS("Source_Classification_Code.rds")
rm(some_lines)
head(Source_Code)
names(Source_Code)
head(Source_Code$Data.Category)
head(Source_Code$Short.Name)
head(Source_Code$SCC)
head(Source_Code$Map.To)
head(Source_Code$Usage.Notes)
head(Source_Code$SCC.Level.Three)
head(Source_Code$SCC.Level.One)
head(Source_Code$SCC.Level.Two)
head(Source_Code$SCC.Level.Four)
head(Source_Code$Option.Set)
head(Source_Code$Option.Group)
head(Source_Code$EI.Sector)
head(Source_Code$SCC)
head(Source_Code$Data.Category)
head(Source_Code$Short.Name)
head(NEI)
class(year)
class(NEI$year)
NEI_by_year <- group_by(NEI, year)
tail(NEI_by_year)
head(NEI_by_year)
total_by_year <- summarize(NEI_by_year, total_emissions = mean(Emissions))
names(total_by_year)
with(total_by_year, plot(total_emissions~year, type="l"))
total_by_year <- summarize(NEI_by_year, total_emissions = sum(Emissions))
with(total_by_year, plot(total_emissions~year, type="l"))
baltimore <- filter(NEI_by_year,fips=="24510")
baltimore_total <- summarize(baltimore, total_emissions = sum(Emissions))
with(baltimore_total, plot(total_emissions~year))
with(baltimore_total, plot(total_emissions~year, type="l"))
baltimore <- filter(NEI, fips=="24510")
with(baltimore,plot(sum(Emissions)~year | type))
year_source_baltimore <- group_by(baltimore,year,type)
summary_y_s_b <- summarize(year_source_baltimore, total_emissions = sum(Emissions))
summary_y_s_b
ggplot(summary_y_s_b,aes(x=year,y=total_emissions)) + geom_point()
ggplot(summary_y_s_b,aes(x=year,y=total_emissions)) + geom_line()
ggplot(summary_y_s_b,aes(x=year,y=total_emissions)) + geom_point()
ggplot(summary_y_s_b,aes(x=year,y=total_emissions)) + facet_wrap(.~type) + geom_line()
ggplot(summary_y_s_b,aes(x=year,y=total_emissions)) + facet_wrap(~type) + geom_line()
head(NEI)
names(Source_Code)
head(Source_Code$Map.To)
head(Source_Code$Data.Category)
head(Source_Code$Short.Name)
head(Source_Code$EI.Sector)
head(Source_Code$Option.Set)
head(Source_Code$Option.Group)
names(Source_Code$EI.Sector)
table(Source_Code$EI.Sector)
?filter
"cat" %in% "moocatnip"
"cat" %in% "moo cat nip"
grep("cat", "moocatnip")
grep("cat", c("moocatnip","cat","moo")
)
?grep
grepl("cat", c("moocatnip","cat","moo")
)
coal <- filter(Source_Code, grepl("coal",EI.Sector))
table(coal$EI.Sector)
coal <- filter(Source_Code, grepl("Coal",EI.Sector))
names(coal)
names(NEI)
coal_scc <- coal$SCC
coal_NEI <- filter(NEI, SCC %in% coal_scc)
coal_year_NEI <- group_by(coal_NEI, year)
summary_c_y_NEI <- summarize(coal_year_NEI, total_coal_emissions = sum(Emissions))
with(summary_c_y_NEI, plot(total_coal_emission~year))
with(summary_c_y_NEI, plot(total_coal_emissions~year))
with(summary_c_y_NEI, plot(total_coal_emissions~year, type="l"))
names(Source_Code)
names(Source_Code$EI.Sector)
levels(Source_Code$EI.Sector)
levels(Source_Code$Short.Name)
levels(Source_Code$SCC.Level.One)
levels(Source_Code$SCC.Level.Two)
levels(Source_Code$EI.Sector)
motor_vehicle_scc <- filter(Source_Code, grepl("On-Road", EI.Sector))
MV_scc <- motor_vehicle_scc$SCC
MV_NEI <- filter(NEI, SCC %in% MV_scc)
MV_year_NEI <- group_by(MV_NEI,year)
total_MV_year <- summarize(MV_year_NEI, total_MV_emissions = sum(Emissions))
with(total_MV_year, plot(total_MV_emissions~year, type="l"))
LosAngeles <- filter(NEI, fips=="06037")
motor_vehicle_scc <- filter(Source_Code, grepl("On-Road", EI.Sector));
MV_scc <- motor_vehicle_scc$SCC;
MV_NEI <- filter(Baltimore, SCC %in% MV_scc);
MV_year_NEI <- group_by(MV_NEI,year);
total_MV_year <- summarize(MV_year_NEI, total_MV_emissions = sum(Emissions));
with(total_MV_year, plot(total_MV_emissions~year, type="l"))
motor_vehicle_scc <- filter(Source_Code, grepl("On-Road", EI.Sector));
MV_scc <- motor_vehicle_scc$SCC;
MV_NEI <- filter(baltimore, SCC %in% MV_scc);
MV_year_NEI <- group_by(MV_NEI,year);
total_MV_year <- summarize(MV_year_NEI, total_MV_emissions = sum(Emissions));
with(total_MV_year, plot(total_MV_emissions~year, type="l"))
LA_Balt <- filter(NEI, fips == "06037" | fips == "24510")
MV_scc <- motor_vehicle_scc$SCC;
MV_NEI <- filter(LA_Balt, SCC %in% MV_scc);
MV_year_NEI <- group_by(MV_NEI,year,fips);
total_MV_year <- summarize(MV_year_NEI, total_MV_emissions = sum(Emissions));
with(total_MV_year, plot(total_MV_emissions~year, color=fips))
MV_scc <- motor_vehicle_scc$SCC;
MV_NEI <- filter(LA_Balt, SCC %in% MV_scc);
MV_year_NEI <- group_by(MV_NEI,year,fips);
total_MV_year <- summarize(MV_year_NEI, total_MV_emissions = sum(Emissions));
with(total_MV_year, plot(total_MV_emissions~year, col=fips))
MV_scc <- motor_vehicle_scc$SCC;
MV_NEI <- filter(LA_Balt, SCC %in% MV_scc);
MV_year_NEI <- group_by(MV_NEI,year,fips);
total_MV_year <- summarize(MV_year_NEI, total_MV_emissions = sum(Emissions));
with(total_MV_year, plot(total_MV_emissions~year, col=fips,type="l"))
MV_scc <- motor_vehicle_scc$SCC;
MV_NEI <- filter(LA_Balt, SCC %in% MV_scc);
MV_year_NEI <- group_by(MV_NEI,year,fips);
total_MV_year <- summarize(MV_year_NEI, total_MV_emissions = sum(Emissions));
with(total_MV_year, plot(total_MV_emissions~year, col=fips))
MV_scc <- motor_vehicle_scc$SCC;
MV_NEI <- filter(LA_Balt, SCC %in% MV_scc);
MV_year_NEI <- group_by(MV_NEI,year,fips);
total_MV_year <- summarize(MV_year_NEI, total_MV_emissions = sum(Emissions));
with(total_MV_year, plot(total_MV_emissions~year, col=fips, legend = c("LA","Balt")))
MV_scc <- motor_vehicle_scc$SCC;
MV_NEI <- filter(LA_Balt, SCC %in% MV_scc);
MV_year_NEI <- group_by(MV_NEI,year,fips);
total_MV_year <- summarize(MV_year_NEI, total_MV_emissions = sum(Emissions));
with(total_MV_year, plot(total_MV_emissions~year, col=fips, legend(legend = c("LA","Balt"))))
MV_scc <- motor_vehicle_scc$SCC;
MV_NEI <- filter(LA_Balt, SCC %in% MV_scc);
MV_year_NEI <- group_by(MV_NEI,year,fips);
total_MV_year <- summarize(MV_year_NEI, total_MV_emissions = sum(Emissions));
with(total_MV_year, plot(total_MV_emissions~year, col=fips, legend("topright",legend = c("LA","Balt"))))
with(total_MV_year, plot(total_MV_emissions~year, col=fips, legend(2008,2000,legend = c("LA","Balt"))))
with(total_MV_year, plot(total_MV_emissions~year, col=fips) legend(2008,2000,legend = c("LA","Balt")))
legend(2008,2000,legend = c("LA","Balt")))
legend(2008,2000,legend = c("LA","Balt"))
legend(2008,2000,legend = c("LA","Balt"), col = c("blue","red"))
legend(2008,2000,legend = c("LA","Balt"), col = c("blue","red"),pch = 19)
legend(2006,2000,legend = c("LA","Balt"), col = c("blue","red"),pch = 19)
legend(2006,2000,legend = c("LA","Balt"), col = c("cyan","magenta"),pch = 19)
legend(2006,2000,legend = c("LA","Balt"), col = fips,pch = 19)
with(total_MV_year, legend(2006,2000,legend = c("LA","Balt"), col = fips,pch = 19))
legend(2006,2000,legend = c("Balt","LA"), col = fips,pch = 19)
with(total_MV_year, legend(2006,2000,legend = c("Balt","LA"), col = fips,pch = 19))
with(total_MV_year, legend(2006,2000,legend = fips, col = fips,pch = 19))
rm(list=ls())
q()
